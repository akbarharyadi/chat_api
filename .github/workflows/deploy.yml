name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.vars.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute image name
        id: vars
        run: |
          IMAGE="ghcr.io/$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')"
          echo "image=${IMAGE}" >> "$GITHUB_OUTPUT"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build image
        run: |
          docker build -t ${{ steps.vars.outputs.image }}:${{ github.sha }} -t ${{ steps.vars.outputs.image }}:latest .

      - name: Push image
        run: |
          docker push ${{ steps.vars.outputs.image }}:${{ github.sha }}
          docker push ${{ steps.vars.outputs.image }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Copy docker-compose.production.yml
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.production.yml"
          target: "/opt/chat-api"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -euo pipefail
            IMAGE="${{ needs.build-and-push.outputs.image }}"
            mkdir -p /opt/chat-api
            cd /opt/chat-api

            cat <<'EOF' > .env.production
RAILS_ENV=production
RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}
CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}
POSTGRES_USER=${{ secrets.POSTGRES_USER }}
POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
POSTGRES_DB=${{ secrets.POSTGRES_DB }}
POSTGRES_HOST=db
POSTGRES_PORT=5432
REDIS_URL=redis://redis:6379/1
CHAT_API_IMAGE=${IMAGE}
EOF

            docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" -p "${{ secrets.GHCR_TOKEN }}"
            docker compose -f docker-compose.production.yml pull
            docker compose -f docker-compose.production.yml up -d --remove-orphans
            docker compose -f docker-compose.production.yml run --rm web bundle exec rails db:migrate
